{"version":3,"sources":["store/UserStore.js","InputField.js","SubmitButton.js","LoginForm.js","App.js","reportWebVitals.js","index.js"],"names":["extendObservable","this","loading","isLoggedIn","username","InputField","className","type","props","placeholder","value","onChange","e","target","React","Component","SubmitButton","disabled","onClick","text","LoginForm","state","password","buttonDisabled","property","val","trim","length","setState","a","fetch","method","headers","body","JSON","stringify","res","json","result","success","UserStore","resetForm","alert","msg","console","log","setInputVal","pasword","doLogin","App","doLogOut","observer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.51c864bb.chunk.js","sourcesContent":["import {extendObservable} from 'mobx';\r\n\r\nclass UserStore {\r\n    constructor() {\r\n        extendObservable(this,\r\n            {\r\n\r\n                loading: true,\r\n                isLoggedIn: false,\r\n                username: ''\r\n            })\r\n    }\r\n}\r\n\r\nexport default new UserStore();","import React from 'react';\r\nimport './App.css';\r\n\r\nclass InputField extends React.Component{\r\n    render(){\r\n        return (\r\n            <div className=\"inputField\">\r\n                \r\n                <input\r\n                    className = 'input'\r\n                    type = {this.props.type}\r\n                    placeholder = {this.props.placeholder}\r\n                    value = {this.props.value}\r\n                    onChange = { (e) => this.props.onChange(e.target.value)}\r\n                > \r\n                </input>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InputField;","import React from 'react';\r\n\r\nclass SubmitButton extends React.Component{\r\n    render(){\r\n        return (\r\n            <div className=\"submitButton\">\r\n                \r\n                <button\r\n                    className = \"btn\"\r\n                    disabled = {this.props.disabled}\r\n                    onClick = {() => this.props.onClick()}\r\n                >\r\n                    {this.props.text}\r\n                </button>    \r\n            \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SubmitButton;","import React from 'react';\r\nimport InputField from './InputField';\r\nimport SubmitButton from './SubmitButton';\r\nimport UserStore from './store/UserStore';\r\n\r\nclass LoginForm extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            buttonDisabled: false\r\n        }\r\n    }\r\n\r\n    setInputVal(property, val)\r\n    {\r\n        val = val.trim();\r\n        if(val.length > 12)\r\n        {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            [property]: val\r\n        })\r\n    }\r\n\r\n    resetForm(){\r\n        this.setState({\r\n            username: '',\r\n            password: '',\r\n            buttonDisabled: false\r\n        })\r\n    }\r\n\r\n    async doLogin(){\r\n        if(!this.state.username)\r\n        {\r\n            return;\r\n        }\r\n        if(!this.state.password)\r\n        {\r\n            return;\r\n        }\r\n        this.setState({\r\n            buttonDisabled: true\r\n        })\r\n        try{\r\n\r\n            let res = await fetch('/login', {\r\n                method: 'post',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    username: this.state.username,\r\n                    password: this.state.password\r\n                })\r\n            });\r\n\r\n            let result = await res.json();\r\n            if(result && result.success)\r\n            {\r\n                UserStore.isLoggedIn = true;\r\n                UserStore.username = result.username;\r\n            }\r\n\r\n            else if(result && result.success === false){\r\n                this.resetForm();\r\n                alert(result.msg);\r\n            }\r\n\r\n        }\r\n        catch(e){\r\n            console.log(e);\r\n            this.resetForm();\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"loginForm\">\r\n\r\n                Log In\r\n                <InputField\r\n                    type = 'text'\r\n                    placeholder = 'Username'\r\n                    value={this.state.username ? this.state.username: '' }\r\n                    onChange = { (val) => this.setInputVal('username', val)}\r\n                >\r\n                </InputField>\r\n                <InputField\r\n                    type = 'password'\r\n                    placeholder = 'Password'\r\n                    value={this.state.password ? this.state.pasword: '' }\r\n                    onChange = { (val) => this.setInputVal('password', val)}\r\n                >\r\n                </InputField>\r\n                <SubmitButton\r\n                    text='Login'\r\n                    disabled={this.state.buttonDisabled}\r\n                    onClick={() => this.doLogin()}\r\n                >\r\n                </SubmitButton>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LoginForm;","import React from 'react';\nimport { observer } from 'mobx-react';\nimport UserStore from './store/UserStore';\nimport LoginForm from './LoginForm';\nimport SubmitButton from './SubmitButton';\nimport './App.css';\n\nclass App extends React.Component{\n\n  async componentDidMount()\n  {\n    try{\n      let res = await fetch('/isLoggedIn',{\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      });\n\n      let result = await res.json();\n\n      if(result && result.success) {\n        UserStore.loading = false;\n        UserStore.isLoggedIn = true;\n        UserStore.username = result.username;\n      }\n      else{\n        UserStore.loading = false;\n        UserStore.isLoggedIn = false;\n      }\n    }\n    catch(e){\n      UserStore.loading = false;\n      UserStore.isLoggedIn = false;\n    }\n  }\n  async Logout()\n  {\n    try{\n      let res = await fetch('/logout',{\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      });\n\n      let result = await res.json();\n\n      if(result && result.success) {\n        UserStore.isLoggedIn = false;\n        UserStore.username = '';\n        \n      }\n    }\n    catch(e){\n      console.log(e);\n    }\n  }\n    render(){\n\n      if(UserStore.loading){\n        return (\n          <div className=\"app\">\n                <div className = 'container'>\n                  Please wait a moment...\n                </div>\n            </div>\n        )\n      }\n      else{\n\n        if(UserStore.isLoggedIn)\n        {\n          return (\n            <div className=\"app\">\n                  <div className = 'container'>\n                    Welcome {UserStore.username}\n\n                    <SubmitButton\n                      text = {'Log Out'}\n                      disabled = {false}\n                      onClick = {() => this.doLogOut()}\n                    />\n\n                  </div>\n              </div>\n          )\n        }\n        return (\n          <div className=\"app\">\n              <div className='container'>\n                <LoginForm />\n              </div>\n          </div>\n      )\n      }\n        \n    }\n}\n\nexport default observer(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}